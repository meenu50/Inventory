{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authguard.guard.ts","webpack:///./src/app/cancelorder/cancelorder.component.html","webpack:///./src/app/cancelorder/cancelorder.component.scss","webpack:///./src/app/cancelorder/cancelorder.component.ts","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.scss","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customerpurchase/customerpurchase.component.html","webpack:///./src/app/customerpurchase/customerpurchase.component.scss","webpack:///./src/app/customerpurchase/customerpurchase.component.ts","webpack:///./src/app/cutomer-guard/customer.guard.ts","webpack:///./src/app/metamask/metamask.component.html","webpack:///./src/app/metamask/metamask.component.scss","webpack:///./src/app/metamask/metamask.component.ts","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.scss","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/services/web3services.service.ts","webpack:///./src/app/stockproduct/stockproduct.component.html","webpack:///./src/app/stockproduct/stockproduct.component.scss","webpack:///./src/app/stockproduct/stockproduct.component.ts","webpack:///./src/app/transferownership/transferownership.component.html","webpack:///./src/app/transferownership/transferownership.component.scss","webpack:///./src/app/transferownership/transferownership.component.ts","webpack:///./src/app/updateproduct/updateproduct.component.html","webpack:///./src/app/updateproduct/updateproduct.component.scss","webpack:///./src/app/updateproduct/updateproduct.component.ts","webpack:///./src/app/viewcus-order/viewcus-order.component.html","webpack:///./src/app/viewcus-order/viewcus-order.component.scss","webpack:///./src/app/viewcus-order/viewcus-order.component.ts","webpack:///./src/app/withdraw/withdraw.component.html","webpack:///./src/app/withdraw/withdraw.component.scss","webpack:///./src/app/withdraw/withdraw.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mdb-navbar SideClass=\\\"navbar fixed-top navbar-expand-lg navbar-dark pink scrolling-navbar ie-nav\\\" [containerInside]=\\\"false\\\">\\n  <logo>\\n      <a class=\\\"logo navbar-brand\\\" href=\\\"#\\\"><strong>Inventory Management</strong></a>\\n  </logo>\\n  <links>\\n      <ul class=\\\"navbar-nav mr-auto color bg-faded\\\">\\n        <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"  mdbWavesEffect>\\n            <a class=\\\"nav-link\\\" routerLink=\\\"product\\\" >Product</a>\\n        </li>\\n        <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\n            <a class=\\\"nav-link\\\"routerLink=\\\"updateproduct\\\">Update Product</a>\\n        </li>\\n        <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\n            <a class=\\\"nav-link\\\"routerLink=\\\"viewcustomerorder\\\" >View Customer</a>\\n        </li>\\n        <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\n            <a class=\\\"nav-link\\\"routerLink=\\\"stockproduct\\\">Stock Products</a>\\n        </li>\\n        <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\" mdbWavesEffect>\\n            <a class=\\\"nav-link\\\"routerLink=\\\"transferowner\\\" >Transfer Ownership</a>\\n        </li>\\n        <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"mdbWavesEffect>\\n            <a class=\\\"nav-link\\\"routerLink=\\\"withdraw\\\" >Withdraw</a>\\n        </li>\\n      </ul>\\n      <ul style=\\\"float:right;list-style:none; \\\" class=\\\"navbar-nav\\\">\\n          <li style=\\\"color:aliceblue\\\">Balance:<span>{{balance}}</span></li>\\n      </ul>\\n     \\n  </links>\\n</mdb-navbar>  \\n<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public product;\n\n  constructor(private wcs:Web3servicesService,private router:Router){\n    \n  }\n \n  ngOnInit() \n    {\n        let meta = this;\n      //  meta.alltablework();\n        meta.wcs.getUserBalance().then(balance => meta.balance = balance);\n        meta.wcs.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                         alert('Address Change Detected Please Refresh Page');\n                         window.location.reload();\n                        // meta.router.navigate(['admin']);\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.wcs.getUserBalance().then(balance => this.balance = balance);\n          meta.wcs.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n      \n      \n    }\n   \n    ngOnDestroy() {\n      if (this.id1) {\n        clearInterval(this.id1);\n      }\n      if (this.id2) {\n          clearInterval(this.id2);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { AppComponent } from '../app.component';\nimport { AdminComponent } from '../admin/admin.component';\nimport { CustomerComponent } from '../customer/customer.component';\nimport { ProductComponent } from '../product/product.component';\nimport { UpdateproductComponent } from '../updateproduct/updateproduct.component';\nimport { StockproductComponent } from '../stockproduct/stockproduct.component';\nimport { ViewcusOrderComponent } from '../viewcus-order/viewcus-order.component';\nimport { TransferownershipComponent } from '../transferownership/transferownership.component';\nimport { WithdrawComponent } from '../withdraw/withdraw.component';\nimport { CustomerpurchaseComponent } from '../customerpurchase/customerpurchase.component';\nimport { CancelorderComponent } from '../cancelorder/cancelorder.component';\nimport { MetamaskComponent } from '../metamask/metamask.component';\nimport { AuthguardGuard } from '../authguard.guard';\nimport { CustomerGuard } from '../cutomer-guard/customer.guard';\nimport { Web3servicesService } from '../services/web3services.service';\n\n\nconst routes: Routes = [\n  { \n    path: '',\n    redirectTo: 'admin',\n    pathMatch: 'full'\n  },\n\n  { \n    path: 'admin',\n    component: AdminComponent,\n    canActivate:[AuthguardGuard], \n     children:[\n      {\n        path: 'product',\n        component: ProductComponent\n      },\n      {\n        path: 'updateproduct',\n        component: UpdateproductComponent\n      },\n      {\n        path: 'viewcustomerorder',\n        component: ViewcusOrderComponent\n      },\n      {\n        path: 'stockproduct',\n        component: StockproductComponent\n      },\n      {\n        path: 'transferowner',\n        component: TransferownershipComponent\n      },\n      {\n        path: 'withdraw',\n        component: WithdrawComponent\n      },\n    ]\n  },\n  \n  {\n    path: 'customer',\n    component: CustomerComponent,\n    canActivate:[CustomerGuard],\n    children:[\n      {\n        path: 'customerpurchase',\n        component: CustomerpurchaseComponent\n      },\n      {\n        path: 'cancelorder',\n        component: CancelorderComponent\n      },\n    ]\n  },\n  {\n    path:\"metamask\",\n    component:MetamaskComponent,\n  }   \n  \n  ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports:[RouterModule],\n  declarations: [],\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-admin></app-admin>\\n<app-customer></app-customer>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\n\n\n\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { ProductComponent } from './product/product.component';\nimport { UpdateproductComponent } from './updateproduct/updateproduct.component';\nimport { StockproductComponent } from './stockproduct/stockproduct.component';\nimport { ViewcusOrderComponent } from './viewcus-order/viewcus-order.component';\nimport { TransferownershipComponent } from './transferownership/transferownership.component';\nimport { WithdrawComponent } from './withdraw/withdraw.component';\nimport { CustomerpurchaseComponent } from './customerpurchase/customerpurchase.component';\nimport { CancelorderComponent } from './cancelorder/cancelorder.component';\nimport { MetamaskComponent } from './metamask/metamask.component';\nimport { AuthguardGuard } from './authguard.guard';\nimport { CustomerGuard } from './cutomer-guard/customer.guard';\nimport { Web3servicesService } from './services/web3services.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    CustomerComponent,\n    ProductComponent,\n    UpdateproductComponent,\n    StockproductComponent,\n    ViewcusOrderComponent,\n    TransferownershipComponent,\n    WithdrawComponent,\n    CustomerpurchaseComponent,\n    CancelorderComponent,\n    MetamaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MDBBootstrapModule.forRoot()\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  providers: [AuthguardGuard,CustomerGuard,Web3servicesService],\n  \n \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Web3servicesService } from './services/web3services.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n  constructor(private wcs:Web3servicesService,private router:Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.wcs.check_admin().then(admin => {\n        console.log(admin);\n         if (admin !=true){\n         // console.log(\"if part\");\n          this.router.navigate(['customer']);\n          return false;\n        } else {\n          return true;\n        }\n      });\n    }\n  }","module.exports = \"\\n<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n      <div class=\\\"row col text-center\\\">\\n\\n\\n          <div class=\\\"col-sm-12\\\" >\\n              <div>\\n                  <h5>ORDER DETAILS</h5>\\n                  <h5 style=\\\"color:blue;\\\">(Cancel Within One Hour)</h5>\\n                  <br>\\n              </div>\\n\\n\\n\\n<div class=\\\"ScrollStyle\\\">\\n    <!--Table-->\\n<table class=\\\"table\\\">\\n\\n    <!--Table head-->\\n    <thead class=\\\"mdb-color darken-3\\\">\\n        <tr class=\\\"text-white\\\">\\n            \\n          <tr class=\\\"text-white\\\">\\n              <th>Order Id</th>\\n              <th>Product Id</th>\\n              <th>Customer Id</th>\\n              <th>ProductName</th>\\n              <th> Quantity</th>\\n              <th>Price</th>\\n              <th>Date</th>\\n              <th>Action</th>\\n          </tr>\\n      </thead>\\n      <!--Table head-->\\n  \\n      <!--Table body-->\\n      <tbody>\\n          <tr *ngFor=\\\"let order of list;\\\" >\\n              <td >{{order.oid}}</td>\\n              <td >{{order.pid}}</td>\\n              <td >{{order.cusid}} </td>\\n              <td >{{order.pname}} </td>\\n              <td>{{order.quantity}}</td>\\n              <td>{{order.price}}</td>\\n              <td>{{order.dateVal | date:'d/M/y'}}</td>\\n             <td><button type=\\\"submit\\\" id=\\\"cancel\\\" (click)=\\\"cancel(order.oid,order.pid);\\\" class=\\\"btn btn-default\\\">cancel</button></td>\\n          </tr>   \\n      </tbody>\\n    <!--Table body-->\\n  </table>\\n  </div>\\n\\n<!--Table-->\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n</main>\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\n  size=\\\"medium\\\"\\n  color=\\\"#fff\\\"\\n  loadingText=\\\"Loading...\\\"\\n  type=\\\"ball-scale-multiple\\\"></ngx-spinner>\\n \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert';\n\n\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-cancelorder',\n  templateUrl: './cancelorder.component.html',\n  styleUrls: ['./cancelorder.component.scss']\n})\nexport class CancelorderComponent implements OnInit {\n\n  public list=[];\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public hashresult;\n  \n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService) { }\n  \n  ngOnInit() {\n    this.pro.getCustomerCount().then(order=>{\n      order.forEach(element => {\n          this.pro.ViewCustomer(element).then(obj=>{\n            var t=(parseInt((Date.now()/1000).toString()));\n            let x=obj[9]+(3600);\n           if(obj[3]!=\"\"&& obj[8]==1 && obj[2]==this.pro.account && (t-obj[9].toNumber() <= 3600)){\n              this.list.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"quantity\":obj[5],\"price\":obj[6],\"dateVal\":obj[7]});\n           }\n          \n         })         \n      });\n    })\n    let meta = this;\n      //  meta.alltablework();\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\n        meta.pro.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                        /// alert('Address Change Detected Please Refresh Page');\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\n          meta.pro.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n    \n  }\n\n  cancel(a,b){\n    let meta=this;\n    this.spinner.show();\n    this.pro.cancel(a,b).then(res=>{\n      if(res==0){\n        this.spinner.hide();\n        swal(\"operation rejected\");\n        window.location.reload();\n    }\n    else{ \n        meta.pro.hash(res).then(result=>{\n          this.spinner.hide(); \n          swal(result); \n          window.location.reload();             \n       })\n    } \n    })       \n        \n  }\n  \n}","module.exports = \"<mdb-navbar SideClass=\\\"navbar fixed-top navbar-expand-lg navbar-dark pink scrolling-navbar ie-nav\\\" [containerInside]=\\\"false\\\">\\n  <logo>\\n      <a class=\\\"logo navbar-brand\\\" href=\\\"#\\\"><strong>Inventory Management</strong></a>\\n  </logo>\\n  <links>\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n          \\n          <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"  mdbWavesEffect>\\n              <a class=\\\"nav-link\\\" routerLink=\\\"customerpurchase\\\">Customer Purchase</a>\\n          </li>\\n          <li class=\\\"nav-item waves-light\\\" [routerLinkActive]=\\\"['active']\\\"  mdbWavesEffect>\\n              <a class=\\\"nav-link\\\"routerLink=\\\"cancelorder\\\">Cancel Order</a>\\n          </li>\\n          \\n      </ul>\\n      <ul class=\\\"navbar-nav\\\">\\n        <li>Customer</li>\\n      </ul>\\n  </links>\\n</mdb-navbar>\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})\nexport class CustomerComponent implements OnInit {\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n\n  \n  constructor(public pro: Web3servicesService,private router:Router) { }\n  \n  ngOnInit() {\n   \n    let meta = this;\n      //  meta.alltablework();\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\n        meta.pro.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                         //alert('Address Change Detected Please Refresh Page');\n                        \n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\n          meta.pro.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n    \n  }\n}\n\n","module.exports = \"\\n<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\" >\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate>\\n                <div>\\n                 <h5>Customer Purchase Form</h5>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"productid\\\">ProductID<font color=\\\"red\\\">*</font></label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"productid\\\" [(ngModel)]=\\\"productid\\\" formControlName=\\\"productid\\\"  (mouseout)=\\\"check()\\\" >\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"quantity\\\">Quantity<font color=\\\"red\\\">*</font></label>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" formControlName=\\\"quantity\\\" (mouseout)=\\\"quantitycheckOut()\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"price\\\">Price<font color=\\\"red\\\">*</font></label>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\"  [value]=\\\"price\\\"formControlName=\\\"price\\\" (mouseenter)=\\\"onKey($event);\\\" readonly >\\n                    </div>\\n                  </div>\\n\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                      <div *ngIf=\\\"angForm.controls['productid'].valid \\\">\\n                        <div *ngIf=\\\"angForm.controls['quantity'].valid \\\">\\n                          <div *ngIf=\\\"angForm.controls['price'].valid \\\">\\n                              <button type=\\\"submit\\\" (click)=\\\"order();\\\" class=\\\"btn btn-default\\\">ORDER</button>\\n                          </div>\\n                        </div>\\n\\n                      </div>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n          <div class=\\\"col-sm-8\\\" >\\n              <div>\\n                  <h5> Product Details</h5>\\n              </div>\\n\\n\\n\\n              <div class=\\\"ScrollStyle\\\">\\n<!--Table-->\\n<table class=\\\"table\\\">\\n\\n  <!--Table head-->\\n  <thead class=\\\"mdb-color darken-3\\\">\\n      <tr class=\\\"text-white\\\">\\n         \\n        <th>Product Id</th>\\n        <th>Product Name</th>\\n        <th>Product Brand</th>\\n        <th>Product Quantity</th>\\n        <th>Product Price</th>\\n        <th>Date</th>\\n\\n      </tr>\\n  </thead>\\n  <!--Table head-->\\n\\n  <!--Table body-->\\n  <tbody>\\n    <tr *ngFor=\\\"let product of details;\\\">\\n        <td >{{product.pid}}</td>\\n        <td >{{product.pname}} </td>\\n        <td>{{product.brand}}</td>\\n        <td>{{product.quantity}}</td>\\n        <td>{{product.price}}</td>\\n        <td>{{product.dateVal | date:'d/M/y'}}</td>\\n    </tr>\\n  </tbody>\\n  <!--Table body-->\\n</table>\\n<!--Table-->\\n</div><br><br><br><br>\\n\\n\\n    <div>\\n        <h5>Order Details</h5>\\n    </div>\\n    <div class=\\\"ScrollStyle\\\">\\n<table class=\\\"table\\\">\\n\\n  <!--Table head-->\\n  <thead class=\\\"mdb-color darken-3\\\">\\n      <tr class=\\\"text-white\\\">\\n          \\n        <tr class=\\\"text-white\\\">\\n            <th>Order Id</th>\\n            <th>Customer Id</th>\\n            <th>Product Id</th>\\n            <th>ProductName</th>\\n            <th> Quantity</th>\\n            <th>Price</th>\\n            <th>Date</th>\\n        </tr>\\n    </thead>\\n    <!--Table head-->\\n\\n    <!--Table body-->\\n    <tbody>\\n        <tr *ngFor=\\\"let order of list;\\\">\\n            <td >{{order.oid}}</td>\\n            <td >{{order.cusid}}</td>\\n            <td >{{order.pid}} </td>\\n            <td >{{order.pname}} </td>\\n            <td>{{order.quantity}}</td>\\n            <td>{{order.price}}</td>\\n            <td>{{order.dateVal | date:'d/M/y'}}</td>\\n        </tr>   \\n    </tbody>\\n  <!--Table body-->\\n</table>\\n</div>\\n       </div>\\n        </div>\\n      </div>\\n\\n</main>\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\n  size=\\\"medium\\\"\\n  color=\\\"#fff\\\"\\n  loadingText=\\\"Loading...\\\"\\n  type=\\\"ball-scale-multiple\\\"></ngx-spinner>\"","module.exports = \".ScrollStyle {\\n  max-height: 260px;\\n  overflow-y: scroll; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\n\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert';\n\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n@Component({\n  selector: 'app-customerpurchase',\n  templateUrl: './customerpurchase.component.html',\n  styleUrls: ['./customerpurchase.component.scss']\n})\nexport class CustomerpurchaseComponent implements OnInit {\n  public productid;\n  public quantity;\n  public price;\n  public details=[];\n  public list=[];\n  public a;\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  angForm: FormGroup;\n\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService, private fb: FormBuilder) {\n    this.createForm();\n   }\n\n  ngOnInit() {\n    this.pro.getproductCount().then(product=>{\n      product.forEach(element => {\n        console.log(element);\n        \n        this.pro.ViewProduct(element).then(obj=>{\n          console.log(obj);\n          if(obj[1]!=\"\")\n          {\n            obj[4]=obj[4]/100;\n            this.details.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":obj[4],\"dateVal\":obj[5]});\n          }\n        })\n        \n      });\n    })\n    this.pro.getCustomerCount().then(order=>{\n      order.forEach(element => {\n          this.pro.ViewCustomer(element).then(obj=>{\n           if(obj[3]!=\"\" && obj[2]==this.pro.account && obj[8]==1){\n            // obj[6]=obj[6]/100;\n              this.list.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"quantity\":obj[5],\"price\":obj[6],\"dateVal\":obj[7]});\n           }       \n         })         \n      });\n    })\n    let meta = this;\n    //  meta.alltablework();\n      meta.pro.getUserBalance().then(balance => meta.balance = balance);\n      meta.pro.getAccount().then(acc => {\n          this.account = acc;\n          meta.id1 = setInterval(function() {\n           if (typeof window.web3 !== 'undefined') {\n               meta._web3 = new Web3(window.web3.currentProvider);\n               if (meta._web3.eth.accounts[0] !== meta.account) {\n                   meta.account = meta._web3.eth.accounts[0];\n                   if (meta._web3.eth.accounts[0] === undefined) {\n                       meta.router.navigate(['metamask']);\n                       clearInterval(this.interval);\n                   } else {\n                      // alert('Address Change Detected Please Refresh Page');\n                   }\n               }\n           } else {\n               meta.router.navigate(['metamask']);\n           }\n          }, 200);\n       });\n\n       meta.id2 = setInterval(function() {\n        meta.pro.getUserBalance().then(balance => this.balance = balance);\n        meta.pro.getAccount().then(account => this.balance = account);\n      //  meta.alltablework();\n    }, 20000);\n  \n  }\n  \n  onKey(e){\n    this.pro.ViewProduct1(this.productid).then(res=>{\n      this.price=(res[4]/100)*this.quantity;\n      console.log(this.price);\n    })\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n        productid: ['', Validators.required ],\n        quantity: ['', Validators.required ],\n        price: ['', Validators.required ],\n    });\n  }\n\n  check(){\n    this.pro.ViewProduct(this.productid).then(res=>{\n          if(res[0]== this.productid){\n           \n          }\n          else{\n            swal(\"Invalid Product id\")\n          }\n          \n    })\n }\n check1(){\n  this.pro.ViewProduct(this.productid).then(res=>{\n        if(res[0]== this.productid){\n         \n        }\n        \n  })\n}\n//  checkOut(){\n//    this.pro.ViewProduct(this.productid).then(res=>{\n//          if(res[0]== this.productid && res[4]!=0){\n//            //swal(\"valid\");\n//          }\n//          else{\n//             swal(\"Invalid Product Id\");\n//          }\n//    })\n// }\nquantitycheckOut(){\n  this.pro.ViewProduct(this.productid).then(res=>{\n        if( res[3]!=0){\n         //s swal(\"valid\");\n        }\n        else{\n           swal(\"Out Of Stock\");\n        }\n  })\n}\n\n\n  order(){\n    let meta=this;\n    meta.spinner.show();\n    meta.pro.order(this.productid,this.quantity,this.price).then(res=>{\n      if(res==0){\n        this.spinner.hide();\n        swal(\"operation rejected\");\n        this.productid=\"\";\n        this.quantity=\"\";\n        this.price=\"\";\n        window.location.reload();\n    }\n    else{ \n        meta.pro.hash(res).then(result=>{\n          this.spinner.hide(); \n          swal(result); \n          this.productid=\"\";\n          this.quantity=\"\";\n          this.price=\"\";\n          window.location.reload();             \n       })\n    }\n      \n    })\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot,Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Web3servicesService } from '../services/web3services.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerGuard implements CanActivate {\n  constructor(private wcs:Web3servicesService,private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.wcs.check_admin().then(admin => {\n        console.log(admin);\n         if (admin !=false){\n          console.log(\"if part\");\n          this.router.navigate(['admin']);\n          return false;\n        } else {\n          console.log(\"else part\");\n          \n        //this.router.navigate(['admin']);\n          return true;\n        }\n      });\n  }\n}\n\n","module.exports = \"<html>\\n\\t<head>\\n\\t\\t<title>Ethereum Account Connectivity Error Page</title>\\n\\t</head>\\n\\t<body>\\n\\t\\t <img src=\\\"./assets/metamask_logo.png\\\"/> \\n\\t\\t<!-- <center> -->\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<br>There was an error while fetching your account.\\n\\t\\t\\t\\t<br>Make sure your Ethereum client is configured correctly\\n\\n\\t\\t\\t\\t<br>Tips:\\n\\t\\t\\t\\t<br>Ensure you unlocked your MetaMask plugin.\\n\\t\\t\\t\\t<br>If you don't have MetaMask plugin install here: \\n\\t\\t\\t\\t<br><a href =\\\"https://metamask.io/ \\\">https://metamask.io/</a>\\n\\t\\t\\t</p>\\n\\t\\t<!-- </center> -->\\n\\t</body>\\n</html>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-metamask',\n  templateUrl: './metamask.component.html',\n  styleUrls: ['./metamask.component.scss']\n})\nexport class MetamaskComponent implements OnInit {\n  public  _web3: any;\n  public id1: any;\n\n  constructor(private wcs: Web3servicesService, private router: Router) {  }\n\n  ngOnInit() {\n    let meta = this;\n    this.id1 = setInterval(function() {\n      if (typeof window.web3 !== 'undefined') {\n        meta._web3 = new Web3(window.web3.currentProvider);\n        if (meta._web3.eth.accounts[0] !== undefined) {\n          meta.router.navigate(['metamask']);\n        }\n        if(meta._web3.eth.accounts!=meta._web3.eth.accounts[0]){\n          meta.router.navigate(['']);\n        }\n      }\n    }, 200);\n  }\n\n  ngOnDestroy() {\n    if (this.id1) {\n      clearInterval(this.id1);\n    }\n  }\n}","module.exports = \"<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n          <div class>\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate >\\n                <div>\\n                 <h3>Add Product Form</h3>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"productname\\\">Name<font color=\\\"red\\\">*</font></label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <input  class=\\\"form-control\\\" onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))' name=\\\"productname\\\" [(ngModel)]=\\\"productname\\\" formControlName=\\\"productname\\\" placeholder=\\\"Enter Product Name\\\" >\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"brand\\\">Brand<font color=\\\"red\\\">*</font></label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <input class=\\\"form-control\\\" name=\\\"brand\\\" [(ngModel)]=\\\"brand\\\"  formControlName=\\\"brand\\\" placeholder=\\\"Enter Brand Name\\\" >\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"quantity\\\">Quantity<font color=\\\"red\\\">*</font></label>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" [value]=\\\"quantity\\\" formControlName=\\\"quantity\\\" placeholder=\\\"Enter Quantity\\\" required>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"amount\\\">Amount<font color=\\\"red\\\">*</font></label>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" name=\\\"amount\\\"  [(ngModel)]=\\\"amount\\\" [value]=\\\"amount\\\" formControlName=\\\"amount\\\" placeholder=\\\"Enter  Amount\\\" required>\\n                    </div>\\n                  </div>\\n\\n                \\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                      <div *ngIf=\\\"angForm.controls['productname'].valid \\\">\\n                        <div *ngIf=\\\"angForm.controls['brand'].valid\\\"> \\n                          <div *ngIf=\\\"angForm.controls['quantity'].valid\\\"> \\n                            <div *ngIf=\\\"angForm.controls['amount'].valid\\\">\\n                              <button type=\\\"submit\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-default\\\">ADD</button>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n      </div>\\n\\n</main>\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\nsize=\\\"medium\\\"\\ncolor=\\\"#fff\\\"\\nloadingText=\\\"Loading ...\\\"\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport {NG_VALIDATORS} from '@angular/forms';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n  public productname;\n  public brand;\n  public quantity;\n  public amount;\n  angForm: FormGroup;\n\n  constructor(private web3Service:Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) {\n  \n    this.createForm();\n\n  }\n  \n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public hashvalue;\n  public a;\n  \n  ngOnInit() {\n  \n    let meta = this;\n      //  meta.alltablework();\n        meta.web3Service.getUserBalance().then(balance => meta.balance = balance);\n        meta.web3Service.getAccount().then(acc => {\n            this.account = acc;\n            console.log(this.account);\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                         //alert('Address Change Detected Please Refresh Page');\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.web3Service.getUserBalance().then(balance => this.balance = balance);\n          meta.web3Service.getAccount().then(account => this.balance = account);\n      }, 20000);\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n       productname: ['', Validators.required ],\n       brand: ['', Validators.required ],\n       quantity: ['', Validators.required ],\n       amount: ['', Validators.required ]\n    });\n  }\n  submit(){\n    let meta=this;\n    meta.spinner.show();\n    this.amount=this.amount*100;\n     meta.web3Service.Product(this.productname,this.brand,this.quantity,this.amount).then((res)=>{ \n        // console.log(res);\n         if(res==0){\n             this.spinner.hide();\n             swal(\"operation rejected\");\n             this.productname=\"\";\n             this.quantity=\"\";\n             this.brand=\"\";\n             this.amount=\"\";    \n         }\n         else{ \n             meta.web3Service.hash(res).then(result=>{\n               this.spinner.hide(); \n               swal(result);\n               this.productname=\"\";\n               this.quantity=\"\";\n               this.brand=\"\";\n               this.amount=\"\";    \n                    \n            })\n         }\n    });\n  \n  }\n \n  \n}\n","import { Injectable } from '@angular/core';\nimport * as Web3 from 'web3';\nimport { promise } from 'protractor';\n\ndeclare let require: any;\ndeclare let window: any;\n\nlet inventoryabi = require('../inventory.json');\n@Injectable({\n  providedIn: 'root'\n})\nexport class Web3servicesService {\n  private _account: string = null;\n  private _web3: any;\n  public account:string;\n  private _tokenContract: any;\n  private _tokenContractAddress: string = \"0x3f2089cd5b7518768e84cc198bcdc8aa162b8cab\";\n\nconstructor() { \n  if (typeof window.web3 !== 'undefined') { \n    // Use Mist/MetaMask's provider\n    this._web3 = new Web3(window.web3.currentProvider);\n  } \n  else \n  {\n    console.warn(\"Please use a dapp browser like mist or MetaMask plugin for chrome\");\n  }\n  this._web3.version.getNetwork((err,netId)=>\n    {\n      switch(netId)\n      {\n        case \"1\":\n          console.log('This is mainnet');\n          break;\n        case \"2\":\n          console.log('This is deprecated Morden test network');\n          break;\n        case \"3\":\n          console.log('This is ropsten test network');\n          break;\n        case \"4\":\n          console.log('This is the Rinkeby test network');\n        case \"42\":\n          console.log('This is the kovan test network');\n          break;\n        default:\n          console.log('This is an unknown network.');\n      }\t\n    });\n  this._tokenContract = this._web3.eth.contract(inventoryabi).at(this._tokenContractAddress);\n}\n\n\n//getAccount details\npublic async getAccount(): Promise<string> {\nif (this._account == null) {\n  this._account = await new Promise((resolve, reject) => {\n    this._web3.eth.getAccounts((err, accs) => {\n      if (err != null) {\n        alert('There was an error fetching your accounts.');\n        return;\n      }\n\n      if (accs.length === 0) {\n        alert(\n          'Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.'\n        );\n        return;\n      }\n      resolve(accs[0]);\n      this.account=accs[0];\n    })\n  }) as string;\n\n  this._web3.eth.defaultAccount = this._account;\n}\n\nreturn Promise.resolve(this._account);\n}\n\n//getBalance\npublic async getUserBalance(): Promise<number> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.getbalance.call( function (err, result) {\n      if(err != null) {\n        reject(err);\n        resolve(0);\n      }\n\n      resolve(_web3.fromWei(result));\n    });\n  }) as Promise<number>;\n}\n\n//Add Product\npublic async Product(a,b,c,d): Promise<any> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.p_details(a,b,c,d,{from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        console.log(err);\n        resolve(0);\n      }\n     else\n       resolve((result));\n    });\n  }) as Promise<any>;\n}\n\n//getProductCount\npublic async getproductCount(): Promise<any> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.productCount({from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        reject(err);\n      }\n      const arr:number[] = [];\n      for(var i=0;i<= result.toNumber();i++){\n        arr.push(i);\n    }\n    resolve(arr);\n   });\n  }) as Promise<number[]>;\n}\n\n//Viewproduct\npublic async ViewProduct(pid): Promise<object> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.viewproduct.call(pid,{from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        reject(err);\n      }\n    //  result[0] = result[0].toNumber();\n      var t= new Date(result[5]*1000);\n      result[5]=t;\n               resolve(result);\n   });\n  }) as Promise<object>;\n}\n\n\npublic async ViewProduct1(pid): Promise<object> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.viewproduct.call(pid,{from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        reject(err);\n      }\n     result[4] = result[4].toNumber();\n      var t= new Date(result[5]*1000);\n      result[5]=t;\n      resolve(result);\n   });\n  }) as Promise<object>;\n}\n\n\n//updateproduct\npublic async update_product(a,b,c): Promise<any> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.update_product(a,b,c,{from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        console.log(err);          \n        resolve(0);\n      }\n      else\n       resolve(result);\n   });\n  }) as Promise<any>;\n}\n\n//getCustomerCount\npublic async getCustomerCount(): Promise<any> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.ordercount({from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        reject(err);\n      }\n      const arr:number[] = [];\n      for(var i=0;i<= result.toNumber();i++){\n        arr.push(i);\n    }\n    resolve(arr);\n   });\n  }) as Promise<number[]>;\n}\n\n//viewcustomer\npublic async ViewCustomer(oid): Promise<object> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.ORDER .call(oid,{from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        reject(err);\n      }\n      result[9]=result[7];\n    result[6]=_web3.fromWei(result[6],\"ether\");\n    var t= new Date(result[7]*1000);\n    result[7]=t;\n\n    resolve(result);\n   });\n  }) as Promise<object>;\n}\n\n//transferOwnership\npublic async TransferownerShip(address): Promise<any> {\n  let account = await this.getAccount();\n\n  return new Promise((resolve, reject) => {\n    let _web3 = this._web3;\n    this._tokenContract.transferOwnership(address,{from:account,gas: 600000},function (err, result) {\n      if(err != null) {\n        console.log(err);\n        resolve(0);\n      }\n       resolve(result);\n   });\n  }) as Promise<any>;\n}\n\n//Withdraw\npublic async WithDraw(amount): Promise<any> {\nlet account = await this.getAccount();\n\nreturn new Promise((resolve, reject) => {\n  let _web3 = this._web3;\n  this._tokenContract.withdraw(_web3.toWei(amount),{from:account,gas: 600000},function (err, result) {\n    if(err != null) {\n     console.log(err);\n      resolve(0);\n    }\n     resolve(result);\n });\n}) as Promise<any>;\n}\n\n//order\npublic async order(a,b,c): Promise<any> {\nlet account = await this.getAccount();\n\nreturn new Promise((resolve, reject) => {\n  let _web3 = this._web3;\n  this._tokenContract.order(a,b,{from:account,value:_web3.toWei(c,\"ether\"),gas: 600000},function (err, result) {\n    if(err != null) {\n      console.log(err);\n      resolve(0);\n    }\n     resolve(result);\n });\n}) as Promise<any>;\n}\n\n//cancelorder\npublic async cancel(a,b): Promise<any> {\nlet account = await this.getAccount();\n\nreturn new Promise((resolve, reject) => {\n  let _web3 = this._web3;\n  this._tokenContract.ordercancel(a,b,{from:account,gas: 600000},function (err, result) {\n    if(err != null) {\n      reject(err);\n    }\n     resolve(result);\n });\n}) as Promise<any>;\n}\n\n\n\n//checking admin\npublic async check_admin(): Promise<boolean> {                                      \nlet account:string = '';\nlet accounts = await this.getAccount();\nlet meta = this;\n//let key_admin:boolean =false;\nawait this.getAccount().then(address => this.account = address);  \nreturn new Promise((resolve, reject) => {\nthis._tokenContract.owner({from:account,gas: 600000},function(err,result) {\n  if(err != null) {\n    console.log(\"error\");\n    reject(err);\n  }\n  else{\n  if (result === accounts)\n  {\n    //key_admin = true;\n    console.log(\"if works\");    \n  }}\n  //console.log(key_admin);\n  //console.log(this.address);\n  console.log(\"testing\",result == accounts);\n  \n  console.log(accounts);\n  \n  //console.log(this.account);\n  \n  resolve(result == accounts);\n});\n}) as Promise<boolean>;\n\n}\n\n//hash function\npublic async hash(a): Promise<string> {\nlet meta = this;\nreturn new Promise((resolve, reject) => {\n\n  var accountInterval = setInterval(function()\n  {\n    meta._web3.eth.getTransactionReceipt(a,function(err,result){\n      if(err != null) {\n      reject(err);\n      }\n\n      if(result !== null)\n      {\n        clearInterval(accountInterval);\n        if(result.status == 0x1)\n        {\n          resolve(\"Success\");          \n        }\n        else\n        {\n          resolve(\"Transaction Failed\");\n        }\n        \n      }\n      \n    })\n  },100)\n}) as Promise<string>;\n}\n  \n}\n","module.exports = \"\\n<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n      <div class=\\\"row col text-center\\\">\\n\\n\\n          <div class=\\\"col-sm-12\\\" >\\n              <div>\\n                  <h5>Stock Details</h5>\\n                  <br>\\n              </div>\\n\\n\\n\\n<div class=\\\"ScrollStyle\\\">\\n<!--Table-->\\n<table class=\\\"table\\\">\\n\\n  <!--Table head-->\\n  <thead class=\\\"mdb-color darken-3\\\">\\n      <tr class=\\\"text-white\\\">\\n\\n\\n          <th >Product Id</th>\\n          <th>Product Name</th>\\n          <th>Product Brand</th>\\n          <th>Product Quantity</th>\\n          <th>Product Price</th>\\n          <th>Date</th>\\n\\n      </tr>\\n  </thead>\\n  <!--Table head-->\\n\\n  <!--Table body-->\\n  <tbody>\\n      <tr *ngFor=\\\"let product of details;\\\">\\n          <td >{{product.pid}}</td>\\n          <td >{{product.pname}} </td>\\n          <td>{{product.brand}}</td>\\n          <td>{{product.quantity}}</td>\\n          <td>{{product.price}}</td>\\n          <td>{{product.dateVal | date: 'd/M/y' }}</td>\\n      </tr>\\n  </tbody>\\n  <!--Table body-->\\n</table>\\n</div>\\n<!--Table-->\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n</main>\\n\"","module.exports = \".ScrollStyle {\\n  max-height: 700px;\\n  overflow-y: scroll; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-stockproduct',\n  templateUrl: './stockproduct.component.html',\n  styleUrls: ['./stockproduct.component.scss']\n})\nexport class StockproductComponent implements OnInit {\n  public details=[];\n  public pid: number;\n  public pname: string;\n  public pbrand: string;\n  public quantity: number;\n  public price: number;\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n\n  constructor(private pro:Web3servicesService,private router:Router) { \n  }\n\n  ngOnInit() {\n    this.pro.getproductCount().then(product=>{\n      product.forEach(element => {\n        console.log(element);\n        \n        this.pro.ViewProduct(element).then(obj=>{\n          console.log(obj);\n          if(obj[1]!=\"\")\n          {\n            obj[4]=obj[4]/100;\n            this.details.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":obj[4],\"dateVal\":obj[5]});\n          }\n        })\n        \n      });\n    })\n    let meta = this;\n      //  meta.alltablework();\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\n        meta.pro.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                       //  alert('Address Change Detected Please Refresh Page');\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\n          meta.pro.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n    \n  }\n\n}\n\n","module.exports = \"<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n          <div class>\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate >\\n                <div>\\n                 <h4>Transfer Ownership</h4>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"address\\\">Address<font color=\\\"red\\\">*</font></label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"address\\\" formControlName=\\\"address\\\" placeholder=\\\"Enter Address\\\">\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                    <div *ngIf=\\\"angForm.controls['address'].valid \\\">\\n                      <button type=\\\"submit\\\" (click)=\\\"transfer();\\\" class=\\\"btn btn-default\\\">Submit</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n      </div>\\n\\n</main>\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\nsize=\\\"medium\\\"\\ncolor=\\\"#fff\\\"\\nloadingText=\\\"Loading...\\\"\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert';\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-transferownership',\n  templateUrl: './transferownership.component.html',\n  styleUrls: ['./transferownership.component.scss']\n})\nexport class TransferownershipComponent implements OnInit {\n  public address:string; \n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  angForm: FormGroup;\n\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) {\n    this.createForm();\n   }\n\n  ngOnInit() {\n    let meta = this;\n      //  meta.alltablework();\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\n        meta.pro.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                        // alert('Address Change Detected Please Refresh Page');\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\n          meta.pro.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n    \n  }\n  createForm() {\n    this.angForm = this.fb.group({\n       address: ['', Validators.required ],\n    });\n  }\n  transfer(){\n    let meta=this;\n    console.log(this.address);\n    meta.spinner.show();\n    meta.pro.TransferownerShip(this.address).then(res=>{\n      if(res==0){\n        this.spinner.hide();\n        swal(\"operation rejected\");\n        this.address=\"\";\n    }\n    else{ \n        meta.pro.hash(res).then(result=>{\n          this.spinner.hide(); \n          swal(result); \n          this.address=\"\";\n          window.location.reload();             \n       })\n    }\n     })\n  }\n}\n\n","module.exports = \"\\n<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\" >\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate >\\n                <div>\\n                 <h5>Update Product Form</h5>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"productid\\\">ProductId<font color=\\\"red\\\">*</font></label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"productid\\\" [(ngModel)]=\\\"productid\\\"  formControlName=\\\"productid\\\" [value]=\\\"productid\\\"  (focus)=\\\"check()\\\" (focusout)=\\\"checkOut()\\\" placeholder=\\\"Enter Product Id\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"quantity\\\">Quantity<font color=\\\"red\\\">*</font></label>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" formControlName=\\\"quantity\\\" [value]=\\\"quantity\\\"  placeholder=\\\"Enter Quantity\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-sm-2\\\" for=\\\"price\\\">Price<font color=\\\"red\\\">*</font></label>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" formControlName=\\\"price\\\" [value]=\\\"price\\\" placeholder=\\\"Enter  Price\\\">\\n                    </div>\\n                  </div>\\n\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                     <div *ngIf=\\\"angForm.controls['productid'].valid\\\" >\\n                          <div *ngIf=\\\"angForm.controls['quantity'].valid\\\"> \\n                              <div *ngIf=\\\"angForm.controls['price'].valid\\\">\\n                                  <button type=\\\"submit\\\" (click)=\\\"Product();\\\" class=\\\"btn btn-default\\\">Update</button>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n          <div class=\\\"col-sm-6\\\" >\\n              <div>\\n                  <h5>Out Of Stock Product Details</h5>\\n              </div>\\n\\n\\n<div class=\\\"ScrollStyle\\\">\\n<!--Table-->\\n<table class=\\\"table\\\">\\n\\n  <!--Table head-->\\n  <thead class=\\\"mdb-color darken-3\\\">\\n      <tr class=\\\"text-white\\\">\\n         \\n          <th>Product Id</th>\\n          <th>ProductName</th>\\n          <th>Brand </th>\\n          <th>Quantity</th>\\n          <th>Price</th>\\n      </tr>\\n  </thead>\\n  <!--Table head-->\\n\\n  <!--Table body-->\\n  <tbody>\\n      <tr *ngFor=\\\"let update of details;\\\">\\n          <td >{{update.pid}}</td>\\n          <td >{{update.pname}}</td>\\n          <td >{{update.brand}}</td>\\n          <td>{{update.quantity}}</td>\\n          <td>{{update.price}}</td>\\n      </tr>\\n  </tbody>\\n  <!--Table body-->\\n</table>\\n<!--Table-->\\n</div>\\n          </div>\\n        </div>\\n      </div>\\n\\n</main>\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\nsize=\\\"medium\\\"\\ncolor=\\\"#fff\\\"\\nloadingText=\\\"Loading...\\\"\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\\n\"","module.exports = \".ScrollStyle {\\n  max-height: 250px;\\n  overflow-y: scroll; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n@Component({\n  selector: 'app-updateproduct',\n  templateUrl: './updateproduct.component.html',\n  styleUrls: ['./updateproduct.component.scss']\n})\nexport class UpdateproductComponent implements OnInit {\n\n  public productid;\n  public quantity;\n  public price;\n  public details=[];\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public id=[];\n   angForm: FormGroup;\n\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) { \n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.pro.getproductCount().then(product=>{\n      product.forEach(element => {\n       // console.log(element);\n        \n        this.pro.ViewProduct(element).then(obj=>{\n         // console.log(obj);\n          if(obj[3]==0 && obj[1]!=\"\")\n          {\n            obj[4]=obj[4]/100;\n            this.details.push({\"pid\":obj[0],\"pname\":obj[1],\"brand\":obj[2],\"quantity\":obj[3],\"price\":obj[4]});\n          }\n        })\n        \n      });\n    })\n    let meta = this;\n    //  meta.alltablework();\n      meta.pro.getUserBalance().then(balance => meta.balance = balance);\n      meta.pro.getAccount().then(acc => {\n          this.account = acc;\n          meta.id1 = setInterval(function() {\n           if (typeof window.web3 !== 'undefined') {\n               meta._web3 = new Web3(window.web3.currentProvider);\n               if (meta._web3.eth.accounts[0] !== meta.account) {\n                   meta.account = meta._web3.eth.accounts[0];\n                   if (meta._web3.eth.accounts[0] === undefined) {\n                       meta.router.navigate(['metamask']);\n                       clearInterval(this.interval);\n                   } else {\n                     //  alert('Address Change Detected Please Refresh Page');\n                   }\n               }\n           } else {\n               meta.router.navigate(['metamask']);\n           }\n          }, 200);\n       });\n\n       meta.id2 = setInterval(function() {\n        meta.pro.getUserBalance().then(balance => this.balance = balance);\n        meta.pro.getAccount().then(account => this.balance = account);\n      //  meta.alltablework();\n    }, 20000);\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n       productid: ['', Validators.required ],\n       quantity: ['', Validators.required ],\n       price: ['', Validators.required ]\n    });\n  }\n\n  check(){\n     this.pro.ViewProduct(this.productid).then(res=>{\n           if(res[0]== this.productid){\n            \n           }\n           \n     })\n  }\n  checkOut(){\n    this.pro.ViewProduct(this.productid).then(res=>{\n          if(res[0]== this.productid){\n            //swal(\"valid\");\n          }\n          else{\n             swal(\"Invalid Product Id \");\n          }\n    })\n }\n\n  Product(){\n    let meta=this;\n    this.price=this.price*100;\n    meta.spinner.show();\n    meta.pro.update_product(this.productid,this.quantity,this.price).then(res=>{\n      if(res==0){\n        this.spinner.hide();\n        swal(\"operation rejected\");\n        this.productid= \"\";\n        this.quantity=\"\";\n        this.price=\"\";\n        // window.location.reload();\n    }\n    else{ \n        meta.pro.hash(res).then(result=>{\n          this.spinner.hide(); \n          swal(result);\n          this.productid= \"\";\n          this.quantity=\"\";\n          this.price=\"\";\n\n          // window.location.reload();           \n       })\n    }   \n     })\n  }\n}\n  \n\n\n\n","module.exports = \"\\n<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n      <div class=\\\"row col text-center\\\">\\n\\n\\n          <div class=\\\"col-sm-12\\\" >\\n              <div>\\n                  <h5>View Customer  Order Details</h5>\\n                  <br>\\n              </div>\\n\\n\\n\\n\\n<!--Table-->\\n<table class=\\\"table  \\\">\\n\\n  <!--Table head-->\\n  <thead class=\\\"mdb-color darken-3\\\">\\n      <tr class=\\\"text-white\\\">\\n          <th>Order Id</th>\\n          <th>Customer Id</th>\\n          <th>Product Id</th>\\n          <th>ProductName</th>\\n          <th> Quantity</th>\\n          <th>Price</th>\\n          <th>Date</th>\\n          <th>Status</th>\\n      </tr>\\n  </thead>\\n  <!--Table head-->\\n\\n  <!--Table body-->\\n  <tbody>\\n      <tr *ngFor=\\\"let order of details;\\\">\\n          <td >{{order.oid}}</td>\\n          <td >{{order.cusid}}</td>\\n          <td >{{order.pid}} </td>\\n          <td >{{order.pname}} </td>\\n          <td>{{order.quantity}}</td>\\n          <td>{{order.price}}</td>\\n          <td>{{order.dateVal | date:'d/M/y'}}</td>\\n          <td>{{order.status}}</td>\\n      </tr>   \\n  </tbody>\\n  <!--Table body-->\\n</table>\\n<!--Table-->\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n</main>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\n\n\n@Component({\n  selector: 'app-viewcus-order',\n  templateUrl: './viewcus-order.component.html',\n  styleUrls: ['./viewcus-order.component.scss']\n})\nexport class ViewcusOrderComponent implements OnInit {\n  public details=[];\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n\n\n  constructor(private web3Service:Web3servicesService,private router:Router) { }\n\n  ngOnInit() {\n     this.web3Service.getCustomerCount().then(order=>{\n       order.forEach(element => {\n           this.web3Service.ViewCustomer(element).then(obj=>{\n             if(obj[8]==1){\n               var a=\"ORDERED\"\n             }\n             else{\n               var a=\"CANCELLED\"\n             }\n            if(obj[3]!=\"\"){\n              this.details.push({\"oid\":obj[0],\"pid\":obj[1],\"cusid\":obj[2],\"pname\":obj[3],\"quantity\":obj[5],\"price\":obj[6],\"dateVal\":obj[7],\"status\":a});\n            }\n\n          })         \n       });\n     })\n     let meta = this;\n      //  meta.alltablework();\n        meta.web3Service.getUserBalance().then(balance => meta.balance = balance);\n        meta.web3Service.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                        // alert('Address Change Detected Please Refresh Page');\n                       // window.location.reload();\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.web3Service.getUserBalance().then(balance => this.balance = balance);\n          meta.web3Service.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n  }\n\n}\n\n","module.exports = \"<main>\\n  <div class=\\\"container-fluid\\\" style=\\\"margin-top: 70px; \\\">\\n\\n          <div class>\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate>\\n                <div>\\n                 <h5><b>Withdraw Ether In Your Account</b></h5>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" for=\\\"amount\\\">Amount<font color=\\\"red\\\">*</font></label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\"  min=\\\"0\\\" name=\\\"amount\\\"  [(ngModel)]=\\\"amount\\\" formControlName=\\\"amount\\\"  placeholder=\\\"Enter Amount\\\">\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                    <div *ngIf=\\\"angForm.controls['amount'].valid \\\">\\n                      <button type=\\\"submit\\\" (click)=\\\"Withdraw()\\\" class=\\\"btn btn-default\\\">WithDraw</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n      </div>\\n\\n</main>\\n<ngx-spinner  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\nsize=\\\"medium\\\"\\ncolor=\\\"#fff\\\"\\nloadingText=\\\"Loading...\\\"\\ntype=\\\"ball-scale-multiple\\\"></ngx-spinner>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Web3servicesService } from '../services/web3services.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators ,FormGroup,FormControl} from '@angular/forms';\n\ndeclare let window: any;\nimport * as Web3 from 'web3';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert';\n\n\n@Component({\n  selector: 'app-withdraw',\n  templateUrl: './withdraw.component.html',\n  styleUrls: ['./withdraw.component.scss']\n})\nexport class WithdrawComponent implements OnInit {\n\n  public amount;\n  public  _web3: any;\n  public id1: any;\n  public id2: any;\n  public account:string;\n  public balance:number;\n  public bla;\n  angForm: FormGroup;\n\n  constructor(public pro: Web3servicesService,private router:Router,private spinner: NgxSpinnerService,private fb: FormBuilder) { \n      this.createForm();\n  }\n\n  ngOnInit() {\n    let meta = this;\n      //  meta.alltablework();\n        meta.pro.getUserBalance().then(balance => meta.balance = balance);\n        meta.pro.getAccount().then(acc => {\n            this.account = acc;\n            meta.id1 = setInterval(function() {\n             if (typeof window.web3 !== 'undefined') {\n                 meta._web3 = new Web3(window.web3.currentProvider);\n                 if (meta._web3.eth.accounts[0] !== meta.account) {\n                     meta.account = meta._web3.eth.accounts[0];\n                     if (meta._web3.eth.accounts[0] === undefined) {\n                         meta.router.navigate(['metamask']);\n                         clearInterval(this.interval);\n                     } else {\n                       //  alert('Address Change Detected Please Refresh Page');\n                     }\n                 }\n             } else {\n                 meta.router.navigate(['metamask']);\n             }\n            }, 200);\n         });\n  \n         meta.id2 = setInterval(function() {\n          meta.pro.getUserBalance().then(balance => this.balance = balance);\n          meta.pro.getAccount().then(account => this.balance = account);\n        //  meta.alltablework();\n      }, 20000);\n  }\n\n createForm() {\n    this.angForm = this.fb.group({\n        amount: ['', Validators.required ],\n    });\n  }\n\n  Withdraw(){\n      let meta=this;\n      meta.spinner.show();\n     console.log(this.balance);\n      meta.pro.WithDraw(this.amount).then(res=>{\n        if(res==0){\n          this.spinner.hide();\n          swal(\"operation rejected\");\n          this.amount=\"\";\n          window.location.reload();\n      }\n      else{ \n          meta.pro.hash(res).then(result=>{\n            this.spinner.hide(); \n            swal(result);   \n            this.amount=\"\";\n           // window.location.reload();           \n         })\n      }\n     })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}